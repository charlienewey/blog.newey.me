---
title: Fixing the UX of IP Addresses
date: 2016-09-06 16:45:55.000000000 +01:00
meta: true
---

Remembering IP addresses has long been a pain point for system administrators.
They're long, clunky and difficult to remember - essentially a 12-digit phone
number for internet-connected machines. Trying to remember the IPs of the
endless reams of servers that you manage (was it x.x.x.y? or was it y.y.y.z?)
is difficult - after all, that's why we have DNS.

<!-- more -->

Trying to remember or communicate all 12 digits (which can be up to 20
syllables long!) is a cognitively demanding task. When we examine [the limits
of short term memory][1], it appears that the average person is capable of
recalling between 5 and 9 abstract pieces of information - a figure which can
easily be reached when trying to remember one or two IPs.

What if we could make IPs easier to remember by reducing the cognitive
overhead? What if, instead of some abstract and oft-meaningless list of
numbers, we could turn IPs into real, pronounceable words? What if, instead of
20 syllables, we could reduce an IP address to 8 syllables (or fewer) - and
make it pronounceable?

There are several approaches that we can take to solve this problem:

* Map the digits of an IP to pronounceable syllables
* Use a pre-defined list of unique words to map IP chunks to words

In this blog post, we'll look at each approach and see which works best.

## IPs as syllable groups

OK, so let's look at our first option; mapping individual digits to syllables.
Let's look at some numbers. In the case of IPv4 addresses (I'll refer to IPv4
addresses as *IP addresses* from this point) there are four groups of integers,
ranging between 0 and 255 respectively. That gives us 256 possibilities for
each digit - giving us 256⁴ possible combinations for an IP address, or
4,294,967,296 combinations. Obviously, there aren't that many pronounceable
syllables (or in fact, words in the English language) - so mapping a single
syllable to an IP address as a whole is out of the question. That seems
obvious.

However - what if we reduce each group in an IP address to an arbitrary base
(e.g. base-16), and map each resulting digit to a syllable? Conveniently, in
base-16, any integer between 0 and 255 can be represented by only two digits.
For example, in base 16, the IP address `127.0.0.1` looks like this:
`7F.0.0.1`. The IP address `45.63.43.64` looks like this: `2D.3F.2B.40`.
Mapping these individual digits to syllables will give us four two-syllable
"words", which will hopefully make for a easier-to-pronounce IP address.
Something like this, perhaps;

<table>
<tr>
    <th>Digit</th>
    <th>Syllable</th>
    <th>Digit</th>
    <th>Syllable</th>
  </tr>
  <tr>
    <td>0</td>
    <td>ba</td>
    <td>8</td>
    <td>le</td>
  </tr>
  <tr>
    <td>1</td>
    <td>bo</td>
    <td>9</td>
    <td>lu</td>
  </tr>
  <tr>
    <td>2</td>
    <td>che</td>
    <td>10 (Hex: A)</td>
    <td>mo</td>
  </tr>
  <tr>
    <td>3</td>
    <td>do</td>
    <td>11 (Hex: B)</td>
    <td>na</td>
  </tr>
  <tr>
    <td>4</td>
    <td>fu</td>
    <td>12 (Hex: C)</td>
    <td>ra</td>
  </tr>
  <tr>
    <td>5</td>
    <td>ra</td>
    <td>13 (Hex: D)</td>
    <td>te</td>
  </tr>
  <tr>
    <td>6</td>
    <td>ko</td>
    <td>14 (Hex: E)</td>
    <td>zo</td>
  </tr>
  <tr>
    <td>7</td>
    <td>ka</td>
    <td>15 (Hex: F)</td>
    <td>zu</td>
  </tr>
</table>

Using this format, the IP `127.0.0.1` would become `kazu.ba.ba.bo`, and so on. This is better! I'll show a few more here;

<table>
  <tr>
    <th>IP</th>
    <th>Base-16 Number</th>
    <th>Syllable-Encoded Result</th>
  </tr>
  <tr>
    <td><pre>127.0.0.1</pre></td>
    <td><pre>7F.0.0.1</pre></td>
    <td><pre>kazu.ba.ba.bo</pre></td>
  </tr>
  <tr>
    <td><pre>8.8.8.8</pre></td>
    <td><pre>8.8.8.8</pre></td>
    <td><pre>le.le.le.le</pre></td>
  </tr>
  <tr>
    <td><pre>45.63.43.64</pre></td>
    <td><pre>2D.3F.2B.40</pre></td>
    <td><pre>chete.dozu.chena.fuba</pre></td>
  </tr>
</table>

However, these semi-meaningless strings of syllables are a little abstract -
definitely still quite difficult to remember, even if they *are* a little
easier to pronounce. This brings us to the next possibility.


## IPs as word pairs

Sticking with the a similar principle to before, it's possible to map words to
IP addresses. If we can come up with a long list of distinct words, then it's
possible to map an IP address to a unique phrase (à la [*"correct horse battery
staple"*][2]). Better yet, if we can come up with a list of 65,536 different
words (65,536 is 256²), we can reduce the number of words needed to represent
an IP address by a factor of two - that is, we can represent an IP address with
*only two words*! Notably, this is somewhat similar to the naming scheme for
URLs at GFYCat (e.g. `https://gfycat.com/AthleticTinyBeauceron`).

Let's give this a try. I have acquired a list of ~91,000 nouns from [here][4].
I have then converted each word to lowercase, ensured there were no duplicate
words, selected 65,536 words from the list entirely at random (using the `shuf
-n 65536` Unix command), and written this out to a new file. Now we can now
start thinking about converting IPs to phrases.

We can essentially treat an IP address (4 groups of integers between 0-255) as
a base-256 number with 4 digits. What we need to do is convert that base-256
number to base-65536 - which, conveniently, can represent an entire IP address
in two digits. Once that's done, it's easy to look up the corresponding word
for each digit. For example, in base-65536, the IP address `127.0.0.1` becomes
`32512.1`, `8.8.8.8` becomes `2056.2056`, `45.63.43.64` becomes `11583.11072`,
and so on. If we have that list of 65,536 words handy, then it's quite simple
to look up the word corresponding with each digit in the base-65536 number, and
therefore come up with a memorable phrase to refer to each IP uniquely. For
example;

<table>
  <tr>
    <th>IP</th>
    <th>Base-65536 Number</th>
    <th>Word-Encoded Result</th>
  </tr>
  <tr>
    <td><pre>127.0.0.1</pre></td>
    <td><pre>32512.1</pre></td>
    <td><pre>kuomintang.aardvark</pre></td>
  </tr>
  <tr>
    <td><pre>8.8.8.8</pre></td>
    <td><pre>2056.2056</pre></td>
    <td><pre>andorran.andorran</pre></td>
  </tr>
  <tr>
    <td><pre>45.63.43.64</pre></td>
    <td><pre>11583.11072</pre></td>
    <td><pre>coffers.claytonia</pre></td>
  </tr>
</table>


### "What about IPv6?"

I haven't specifically mentioned IPv6 addresses in this blog post - mostly
because it's late and I should be in bed, but partly because *exactly the same
principles apply* to IPv6 - in fact, if my back-of-the-metaphorical-envelope
calculations are correct, it's possible to represent an IPv6 address by using 8
unique words (assuming we're using the same 65,536 word dictionary from
earlier) - which is definitely an improvement on an incomprehensible 128-bit
hexadecimal string. I've got a much better chance of remembering 8 words than I
do of 32 hexadecimal characters - and let's face it, any improvement we can
make to the usability of IPv6 has to be a Good Thing™.

In fact, let's try it here.

<table>
  <tr>
    <th>IPv6 Address</th>
    <th>Word-Encoded Result</th>
  </tr>
  <tr>
    <td><pre>2001:0DB8:AC10:FE01::::</pre></td>
    <td><pre>calibrations:astringents:pinpoint:xantippe::::</pre></td>
  </tr>
  <tr>
    <td><pre>2001:19f0:5001:117:5400:ff:fe33:71c3</pre></td>
    <td><pre>calibrations:borsch:exclusives:accentor: ...</pre></td>
  </tr>
</table>

Note that, on the second IPv6 address I had to truncate the result as the word
encoding was too long to fit on the page! Perhaps a small side effect. :)


## In conclusion

What have we done? We've improved the pronounceability and memorability of the
humble IP address by using base-*n* trickery and large dictionaries of
memorable nouns to re-encode them into something a bit... nicer. Not only do
these approaches reduce the number of syllables to encode an IP address, but
they also increase pronounceability, memorability, and overall friendliness.
Isn't `coffers.claytonia` much easier to say than `45.63.43.64`? I certainly
think so.


[1]: https://en.wikipedia.org/wiki/The_Magical_Number_Seven,_Plus_or_Minus_Two
[2]: https://xkcd.com/936/
[3]: https://gfycat.com/AthleticTinyBeauceron
[4]: http://www.ashley-bovan.co.uk/words/partsofspeech.html
